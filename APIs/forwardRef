* fowardRef
- forwardRef lets your component exzpose a DOM node to parent component with a 'ref'.
부모 컴포넌트에서 자식 컴포넌트 안의 DOM Element 에 접근하고 싶을때 사용

함수형 컴포넌트는 인스턴스가 없기 때문에 ref 속성을 사용할 수 없다.
따라서, 함수형 컴포넌트를 forwardRef로 감싸주게 되면 ref를 사용할 수 있다.

useRef는 DOM Element 에 접근하기 위해 사용하는 hook이다.


이렇게 하면 부모인 Form 컴포넌트가 MyInput에 의해 노출된 <input> DOM 노드에 접근할 수 있습니다.
function Form() {
  const ref = useRef(null);

  function handleClick() {
    ref.current.focus();
  }

  return (
    <form>
      <MyInput label="Enter your name:" ref={ref} />
      <button type="button" onClick={handleClick}>
        Edit
      </button>
    </form>
  );
}


typescript 에서 forwardRef 사용예시
* 부모 컴포넌트 : Parent.tsx

const Parent =()=>{
	const inputRef= useRef<HTMLInputElement>(null);
  //....
  
  return(
  //...
    <MyInput ref={inputRef}/>
  )
}


* 자식 컴포넌트 : MyInput.tsx
import React from 'react'

// forwardRef 함수에 제네릭으로 ref와 props의 타입을 명시
// ref type :HTMLInputElement 
// props  type :React.InputHTMLAttributes<HTMLInputElement>
const MyInput = React.forwardRef<HTMLInputElement, React.InputHTMLAttributes<HTMLInputElement>>(
  (props, ref) => {
    // input 요소에 ref와 props를 적용하여 반환
    return <input ref={ref} {...props} />
  }
)





